
generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model RefreshToken {
	id         String   @id @unique
	hash       String
	userID     String
	userAgent  String?
	ipAddress  String?

	user       User     @relation(fields: [userID], references: [id], onDelete: Cascade)

	createdAt  DateTime @default(now())
	expiresAt  DateTime
}

model VerificationToken {
	id         String   @id @unique
	hash       String
	userID     String

	user       User     @relation(fields: [userID], references: [id], onDelete: Cascade)

	createdAt  DateTime @default(now())
	expiresAt  DateTime
}

enum UserRole {
	USER
	ADMIN
}

model User {
	id                 String              @id @default(cuid())
	role               UserRole            @default(USER)
	username           String
	email              String              @unique
	password           String
	verified           Boolean             @default(false)

	refreshTokens      RefreshToken[]
	verificationTokens VerificationToken[]
	controlSession     ControlSession?

	createdAt          DateTime            @default(now())
}

model ControlSession {
	id           String   @id @default(cuid())
	user         User     @relation(fields: [userID], references: [id], onDelete: Cascade)
	locked       Boolean  @default(true)
	images       Image[]

	userID       String   @unique

	createdAt    DateTime @default(now())
	releaseAt    DateTime
	maxReleaseAt DateTime?
}

model Image {
	id        String         @id @default(cuid())
	name      String
	type      String
	data      Bytes
	
	sessionID String
	session   ControlSession @relation(fields: [sessionID], references: [id])

	createdAt DateTime       @default(now())
}